// connect() function, connection initiated by the kernel
--tolerance_usecs=100000
`../common/defaults.sh`


0.0   socket(..., SOCK_STREAM, IPPROTO_MPTCP) = 3
+0.0  setsockopt(3, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
+0.0  fcntl(3, F_GETFL) = 0x2 (flags O_RDWR)
+0.0  fcntl(3, F_SETFL, O_RDWR|O_NONBLOCK) = 0

// Establish connection and verify that there was no error.

+0.0  connect(3, ..., ...) = -1 EINPROGRESS (Operation now in progress)
+0.01   > S 0:0(0) <mss 1460,sackOK,TS val 100 ecr 0,nop,wscale 8,mpcapable v1 flags[flag_h] nokey>
+0.01   < S. 0:0(0) ack 1 win 65535 <mss 1460,sackOK,TS val 700 ecr 100,nop,wscale 8,mpcapable v1 flags[flag_h] key[skey=2] >
+0.01  > . 1:1(0) ack 1 win 256 <nop, nop, TS val 100 ecr 700,mpcapable v1 flags[flag_h] key[ckey,skey]>
0.200 getsockopt(3, SOL_SOCKET, SO_ERROR, [0], [4]) = 0
0.205 fcntl(3, F_SETFL, O_RDWR) = 0   // set back to blocking

// send 2 data segments and get them acked by packetdrill
0.3  write(3, ..., 1000) = 1000
+0.01   > P. 1:1001(1000) ack 1 <nop, nop, TS val 100 ecr 700, mpcapable v1 flags[flag_h] key[ckey,skey] mpcdatalen 1000, nop, nop>
+0.01   < .  1:1(0) ack 1001 win 225 <dss dack8=1001 nocs>
+0.1 write(3, ..., 500) = 500
+0.01   > P. 1001:1501(500) ack 1 <nop, nop, TS val 100 ecr 700, dss dack4=1 dsn8=1001 ssn=1001 dll=500 nocs, nop, nop>
+0.01   < .  1:201(200) ack 1501 win 225 <dss dack8=1501 dsn8=1 ssn=1 dll=200 nocs, nop, nop>
+0.01   > .  1501:1501(0) ack 201 <nop, nop, TS val 100 ecr 700, dss dack8=201 dll=0 nocs>
+0.1 read(3, ..., 200) = 200

